@model  PagingViewModel
@{ 
    var url = Request.Path + "?";

    //Request.QueryString.Remove("p");
    string urlqr = "";


    if (Request.QueryString["p"].IsNullEmpty())
    {
        urlqr = Request.QueryString.ToString();
    } else
    {
        urlqr = Request.QueryString.ToString().Replace("&p=" + Request.QueryString["p"], "");
        urlqr = urlqr.Replace("p=" + Request.QueryString["p"], "");
    }


    if (!urlqr.IsNullEmpty()) {
        urlqr += "&";
    }

    urlqr = urlqr.Replace("&&","&");
    url += urlqr + "p=";

    int pl = Model.Page-5;
    if (pl < 2) {
        pl = 2;
    }
}
<div class="paging">
    @if (Model.Page > 1)
    {
        <a href="@(url + (Model.Page-1))">Back</a>
        <a href="@(url + 1)">1</a>
    }
    @for (var i = pl; i < Model.Page; i++)
    {
        <a href="@(url + i)">@i</a>
    }
    <a href="@(url + Model.Page)" class="current">@Model.Page</a>
    @for (var i = Model.Page + 1; i < (Model.MaxPage) && i < Model.Page + 5; i++)
    {
        <a href="@(url + i)">@i</a>
    }
    @if (Model.Page < Model.MaxPage)
    {
        <a href="@(url + Model.MaxPage)">@Model.MaxPage</a>
        <a href="@(url + (Model.Page+1))">Next</a>
    }

</div><!--paging-->