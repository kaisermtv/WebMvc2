@model  AdminMenuEditViewModel
<div class="form-group">
    @Html.LabelFor(model => model.Colour)
    @Html.EditorFor(model => model.Colour)
    @Html.ValidationMessageFor(model => model.Colour)
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Name)
    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Name)
</div>
<div class="form-group">
    @Html.LabelFor(model => model.ParentMenu)
    @Html.DropDownListFor(model => model.ParentMenu, Model.AllMenus, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.ParentMenu)
</div>

<div class="form-group">
    @Html.LabelFor(model => model.iType)
    @Html.DropDownListFor(model => model.iType, Model.AllType, new { @class = "form-control", @onchange= "iTypeOnchang(this.value)" })
    @Html.ValidationMessageFor(model => model.iType)
</div>
<div class="form-group@(Model.iType == 0?"":" hidden")" id="iTypeLink">
    @Html.LabelFor(model => model.Link)
    @Html.TextBoxFor(model => model.Link, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Link)
</div>
<div class="form-group@(Model.iType == 1?"":" hidden")" id="iTypeLinkPage">
    @Html.LabelFor(model => model.LinkPage)
    @Html.DropDownListFor(model => model.LinkPage,Model.AllPage, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.LinkPage)
</div>
<div class="form-group@(Model.iType == 2?"":" hidden")" id="iTypeLinkCat">
    @Html.LabelFor(model => model.LinkCat)
    @Html.DropDownListFor(model => model.LinkCat,Model.AllCat, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.LinkCat)
</div>
<div class="form-group@(Model.iType == 3?"":" hidden")" id="iTypeLinkNews">
    @Html.LabelFor(model => model.LinkNews)
    <div style="display:table;width:100%">
        <input id="LinkNewsTitle" name="TitleNews" value="@Model.TitleNews" class="form-control" style = "float:left; width: calc(100% - 100px)" readonly="readonly" />
        @Html.HiddenFor(model => model.LinkNews)
        <button type="button" onclick="popupSelectNews('LinkNews','LinkNewsTitle')" class="btn btn-default" style="width:90px;float:right">Chọn</button>
    </div>
    @Html.ValidationMessageFor(model => model.LinkNews)
</div>
<div class="form-group@(Model.iType == 4?"":" hidden")" id="iTypeLinkProduct">
    @Html.LabelFor(model => model.LinkProduct)
    <div style="display:table;width:100%">
        <input id="LinkProductTitle" name="TitleProduct" value="@Model.TitleProduct" class="form-control" style="float:left; width: calc(100% - 100px)" readonly="readonly" />
        @Html.HiddenFor(model => model.LinkProduct)
        <button type="button" onclick="popupSelectProduct('LinkProduct','LinkProductTitle')" class="btn btn-default" style="width:90px;float:right">Chọn</button>
    </div>
    @Html.ValidationMessageFor(model => model.LinkProduct)
</div>
<div class="form-group@(Model.iType == 5 ? "":" hidden")" id="iTypeLinkGroupProduct">
    @Html.LabelFor(model => model.LinkGroupProduct)
    <div style="display:table;width:100%">
        <input id="LinkGroupProductTitle" name="TitleGroupProduct" value="@Model.TitleGroupProduct" class="form-control" style="float:left; width: calc(100% - 100px)" readonly="readonly" />
        @Html.HiddenFor(model => model.LinkGroupProduct)
        <button type="button" onclick="popupSelectGroupProduct('LinkGroupProduct','LinkGroupProductTitle')" class="btn btn-default" style="width:90px;float:right">Chọn</button>
    </div>
    @Html.ValidationMessageFor(model => model.LinkProduct)
</div>
<script>
    var tlink = new Array();
    tlink[0] = document.getElementById("iTypeLink");
    tlink[1] = document.getElementById("iTypeLinkPage");
    tlink[2] = document.getElementById("iTypeLinkCat");
    tlink[3] = document.getElementById("iTypeLinkNews");
    tlink[4] = document.getElementById("iTypeLinkProduct");
    tlink[5] = document.getElementById("iTypeLinkGroupProduct");
    var tlinkactive = tlink[@Model.iType];

    function iTypeOnchang(itype) {
        tlinkactive.className += " hidden";
        tlink[itype].className = "form-group";
        tlinkactive = tlink[itype];
    }
</script>
<div class="form-group">
    @Html.LabelFor(model => model.Image)
    <div class="input-group">
        <span class="input-group-btn">
            <span class="btn btn-default btn-file" onclick="ButtonInjectChooseImage('Image','')">
                @Html.LanguageString("Post.Browse")
            </span>
        </span>
        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Description)
    @Html.EditorFor(model => model.Description)
    @Html.ValidationMessageFor(model => model.Description)
    @*<script>
            CKEDITOR.replace("Description");
        </script>*@
</div>
<div class="form-group">
    @Html.LabelFor(model => model.SortOrder)
    @Html.TextBoxFor(model => model.SortOrder, new { @class = "form-control", type = "number" })
    @Html.ValidationMessageFor(model => model.SortOrder)
</div>
