@model AdminEditProductClassViewModel
@*<div class="form-group">
    @Html.LabelFor(model => model.Colour)
    @Html.EditorFor(model => model.Colour)
    @Html.ValidationMessageFor(model => model.Colour)
</div>*@
<div class="form-group">
    @Html.LabelFor(model => model.Name)
    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Name)
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Image)
    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
    <script>
        FileManage.replace("Image", { Muti: true });
    </script>

    @*@Html.LabelFor(model => model.Image)
    <div class="input-group">
        <span class="input-group-btn">
            <span class="btn btn-default btn-file" onclick="ButtonInjectChooseImage('Image','')">
                @Html.LanguageString("Post.Browse")
            </span>
        </span>
        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })*@

</div>
<div class="form-group">
    @Html.LabelFor(model => model.Description)
    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @style = "resize:vertical" })
    @Html.ValidationMessageFor(model => model.Description)
    <script>
        CKEDITOR.replace("Description");
    </script>
</div>
<div class="form-group">
    <table class="table table-bordered table-striped">
        <tr>
            <th style="width:30px">Check</th>
            <th>Tên thuộc tính</th>
            <th style="width:80px">Hiển thị</th>
        </tr>
        @if (Model.AllAttribute != null)
        {
            for (int i = 0; i < Model.AllAttribute.Count; i++)
            {
                <tr>
                    <td>
                        <input type="hidden" name="AllAttribute[@i].Id" value="@Model.AllAttribute[i].Id" id="AllAttribute_@(i)_id" />
                        <input type="checkbox" value="true" name="AllAttribute[@i].IsCheck" id="AllAttribute_@(i)_IsCheck" @Html.Raw(Model.AllAttribute[i].IsCheck ? "checked=\"checked\"" : "") />
                    </td>
                    <td>@Model.AllAttribute[i].Name</td>
                    <td><input type="checkbox" value="true" name="AllAttribute[@i].IsShow" id="AllAttribute_@(i)_IsShow" @Html.Raw(Model.AllAttribute[i].IsShow ? "checked=\"checked\"" : "") /></td>
                </tr>
            }
        }
    </table>
</div>
<div class="checkbox">
    @using (Html.BeginLabelFor(m => m.IsLocked, new { @class = "checkbox" }))
    {
        @Html.CheckBoxFor(m => m.IsLocked)
    }
    @Html.ValidationMessageFor(m => m.IsLocked)
</div>